#####################################################################
#  PAUSE
#####################################################################

[delayed_gcode __print_cancel_loaded]
initial_duration: 4.501
gcode:
	_proc_start function=__print_cancel_loaded func_params='"{rawparams|string}"'  
	{% if printer["gcode_macro _printer_vars"].ptr_verb_cfgload %} 
		M118 >>> __print_cancel Loaded. <<<
		say "__print_cancel Loaded"
	{% endif %}
	_proc_end function=__print_cancel_loaded 

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:

	_proc_start function=CANCEL_PRINT func_params='"{rawparams|string}"'  

	say_wait S="Print Cancelling"

	M118 Cancel @ S{printer.virtual_sdcard.file_position} - {(printer.virtual_sdcard.progress*100)|round(2,'common')}%: X{printer.toolhead.position.x|round(3,'common')} Y{printer.toolhead.position.y|round(3,'common')} Z{printer.toolhead.position.z|round(3,'common')}

	# Move head and retract only if not already in the pause state and park set to true
	{% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true' %}
		TOOLHEAD_PARK_CANCEL
	{% endif %}
	
	CANCEL_PRINT_BASE
	CLEAR_PAUSE
	stop_pause_alarm

	SET_PIN PIN=_PWR_SW_LED VALUE=1
    
	M300 P10 S3000						   							# play
	M300 P10 S2000						   							# 	descending
	M300 P10 S1000						   							#		tone
  
	# using delay here, so that FW print canx dialog can happen before this UI Prompt.
	get_user_input_delay DELAY=1 PROMPT="Turn Heaters Off? (YES/no):" RCVR_MACRO=_print_canx_ui_cooldown TO_PERIOD=60 TO_CYCL_DEF=0 TO_RESP_DEF=YES

	_proc_end function=CANCEL_PRINT 

#--------------------------------------------------------------------

[gcode_macro _TOOLHEAD_PARK_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:

	_proc_start function=_TOOLHEAD_PARK_CANCEL func_params='"{rawparams|string}"'  

  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set z_park_delta = 2.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - z_park_delta) %}
    {% set z_safe = z_park_delta %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E-{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
    {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}


	_proc_end function=_TOOLHEAD_PARK_CANCEL 


[gcode_macro _print_canx_ui_cooldown]
gcode:

	_proc_start function=_print_canx_ui_cooldown func_params='"{rawparams|string}"'  

	{% set svv = printer.save_variables.variables %}				# set context for save_variables object

	{% if params.UI_INPUT == YES or
		  params.UI_INPUT == 'YES' or
		  params.UI_INPUT == "YES" or
		  params.UI_INPUT == '"YES"' %}
		TURN_OFF_HEATERS
		M118 Heaters Off.
	{% else %}
		M118 Heaters Left On.
	{% endif %}

	_print_canx_summary

	_proc_end function=_print_canx_ui_cooldown 

[gcode_macro _print_canx_summary]
gcode:

	_proc_start function=_print_canx_summary func_params='"{rawparams|string}"'  

	{% set svv = printer.save_variables.variables %}				# set context for save_variables object

	# emit dialog in console/on lcd
	M118 >>> Print Cancelled <<<
	M117 Print Cancelled
	say_wait S="Print Cancelled"

	_proc_end function=_print_canx_summary 



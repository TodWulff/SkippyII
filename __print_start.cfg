#####################################################################
#  PRINT_START
#####################################################################

#####################################################################
# 	PRINT_START - includes ercf stuffs
#####################################################################
# FYSA, SAVE_VARIABLE VARIABLE= maxz VALUE=blah is cleared at start and repeatedly set by __SetSlicerVar gcode_macro called
# on each layer from sliced gcode (w/ help of post processing) - disallowed mid-print lowering of same (OAAT/Seq printing)

[gcode_macro PRINT_START]
# PS Call: print_start EXTRUDER=[first_layer_temperature] BED=[first_layer_bed_temperature]

gcode:

	{% set svv = printer.save_variables.variables %}				# set context for save_variables object

	######################## debug stuffs
#	{% if svv.module_debug_loaded %} _enable_trace_debug REASON='"_bounds checking effed"' {% endif %}
#	{% if svv.module_debug_loaded %} _enable_gmove_debug REASON='"blah"' {% endif %}
#	{% if svv.module_debug_loaded %} _enable_save_var_debug REASON='"blah"' {% endif %}

	{% if printer["gcode_macro _printer_vars"].ptr_verb_codeflow %} _proc_start function=PRINT_START func_params='"{rawparams|string}"'  {% endif %}

#	fix_cameras

	{% set th = printer.toolhead %}									# set eazy accesss context for printer.toolhead object

	SAVE_VARIABLE VARIABLE=maxz VALUE=0.0							# clear any prior saved print height
	SAVE_VARIABLE VARIABLE=ercf_swaps VALUE=0						# clear any prior saved
	SAVE_VARIABLE VARIABLE=type VALUE='"Startup"'					# clear any prior saved
	SAVE_VARIABLE VARIABLE=ercf_interactions VALUE=0				# clear any prior saved

	M220 S100			# set feedrate percentage to default in case it was altered by the user previously
	M221 S100			# set speed percentage to default in case it was altered by the user previously

	M104 S{params.EXTRUDER|int}										# start heating HE - will wait below
	M140 S{params.BED|int}											# start heating bed - will wait below

#	{% if svv.module_ercf_loaded|int %}
#
#		#nix ercf encoder_sensor ops at start of print, if so enabled (per ercf guidance), as filament unloaded
#		{% if printer["gcode_macro _ERCF_VAR"].clog_detection|int == 1 %}
#			SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0
#		{% endif %}
#
#		# test for ercf and then test for boot load deq testing
#		{% if printer["gcode_macro _ERCF_VAR"].test_ercf_load_seq_at_print %}
#			M118 PrintStart ERCF Fil Load Test Seq Starting
#			ERCF_TEST_LOAD_SEQUENCE LOOP=1
#			# TODO: test ercf error flag here and report if error
#			M118 PrintStart ERCF Fil Load Test Seq Completed
#		{% endif %}
#
#	{% endif %}

	# advise dynamic PA enablement (see _linear_advance | _linadv_vars)
	{% if svv.module_linadv_loaded %}
		{% if printer["gcode_macro _linadv_vars"].dynamic_pa_enable %}
			M118 -- Mesh-Specific Dynamic PA Enabled --
		{% else %}
			M118 -- Mesh-Specific Dynamic PA DISABLED --
		{% endif %}
	{% endif %}

	# advise dynamic ExtMult enablement (see _gcode_processing.cfg | _gcodeproc_vars)
	{% if svv.module_gcodeproc_loaded %}
		{% if printer["gcode_macro _gcodeproc_vars"].dynamic_extrate_enable %}
			M118 -- Mesh-Specific Dynamic ExtRate Enabled --
		{% else %}
			M118 -- Mesh-Specific Dynamic ExtRate DISABLED --
		{% endif %}
	{% endif %}

	# advise dynamic SpeedRate enablement (see _gcode_processing.cfg | _gcodeproc_vars)
	{% if svv.module_gcodeproc_loaded %}
		{% if printer["gcode_macro _gcodeproc_vars"].dynamic_spdrate_enable %}
			M118 -- Mesh-Specific Dynamic SpdRate Enabled --
		{% else %}
			M118 -- Mesh-Specific Dynamic SpdRate DISABLED --
		{% endif %}
	{% endif %}

	# do check to verify that slicer meets requirements (v0_xxxx_slicer_check = MHz_Cura or MHz_PS)
	# this variable is set by the slicer w/ a post-processing script.  some of the 'features'
	# on V0.XXXX is handled by the variables that are parsed and set by SAVE_VARIABLES when
	# the .gcode file is printed

	{% if svv.v0_xxxx_slicer_check != "mhz_cura"  and svv.v0_xxxx_slicer_check != "mhz_ps" %}
		M117 Houston, We have a problem...
		SAVE_VARIABLE VARIABLE=v0_xxxx_slicer_check VALUE='"NULL"'			# clear SLICER VITALS
		{action_raise_error("WRONG SLICER AND/OR CONFIGURATION USED: " + svv.v0_xxxx_slicer_check|string) }
	{% else %}
		M118 { "Slicer Check Passed: " ~ svv.v0_xxxx_slicer_check }
	{% endif %}

	{% if printer["gcode_macro _printer_vars"].ptr_verb_status %} M118 >>> Print Starting <<< {% endif %}

	SAVE_VARIABLE VARIABLE=last_ptr_state VALUE='"print_starting"'	# machine state save
	snd_PrintStart

	CLEAR_PAUSE

	go_absolute									# force absolute positioning
	G0 F15000									# set a sane 250mm/sec speed == feedrate of 15000mm/min

	G28
    G1 Z5 F3000                   				# move nozzle away from bed

	{% if svv.v0_xxxx_slicer_check == "mhz_ps" %}
		M109 S{params.EXTRUDER|int}				# wait for HE coming up to temp
	{% endif %}

	{% if svv.v0_xxxx_slicer_check == "mhz_ps" %}
		M190 S{params.BED|int}					# wait for bed to come up to temp before proceeding
	{% endif %}

	{% if printer["gcode_macro _printer_vars"].ptr_verb_status %} M118 >>> Temps are up - Printing <<< {% endif %}

	M118 PRINT_START @ {printer.virtual_sdcard.file_position} - {(printer.virtual_sdcard.progress*100)|round(2,'common')}%: X:{printer.toolhead.position.x} Y:{printer.toolhead.position.y} Z:{printer.toolhead.position.z}

	M117 Printing

	SET_PIN PIN=_PWR_SW_LED VALUE=0.5
    
	SAVE_VARIABLE VARIABLE=last_ptr_state VALUE='"print_started"'	# machine state save

#	_start_bounds_checking # re-enable automatic periodic H2O cooling parameter checks (in case canx'd by user)

#	{% if svv.module_ercf_loaded %}
#		#reenable encoder_sensor ops at start of print, if so enabled (per ercf guidance), as filament will be loaded
#		{% if printer["gcode_macro _ERCF_VAR"].clog_detection|int == 1 %}
#			SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=1
#		{% endif %}
#	{% endif %}

 # M118 { "printer.configfile.config.stepper_z.position_endstop: " ~ printer.configfile.config.stepper_z.position_endstop }

	{% if printer["gcode_macro _printer_vars"].ptr_verb_codeflow %} _proc_end function=PRINT_START {% endif %}

	######################### debug stuffs
#	{% if svv.module_debug_loaded %} _disable_save_var_debug {% endif %}	# make sure svv debug off
#	{% if svv.module_debug_loaded %} _disable_gmove_debug {% endif %}
#	{% if svv.module_debug_loaded %} _disable_trace_debug {% endif %}

#----------------------------------------------------------------------------------

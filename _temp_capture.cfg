#####################################################################
#  Temp setting captures
#####################################################################

[delayed_gcode _temp_capture_loaded]
initial_duration: 4.501
gcode:
	_proc_start function=_temp_capture_loaded func_params='"{rawparams|string}"'  
	{% if printer["gcode_macro _printer_vars"].ptr_verb_cfgload %} 
		M118 >>> _temp_capture Loaded. <<<
		say "_temp_capture Loaded"
	{% endif %}
	_proc_end function=_temp_capture_loaded 

[gcode_macro M104]
description:  capture and set target HE temp, non-blocking
rename_existing: M104.1
gcode:

	_proc_start function=M104 func_params='"{rawparams|string}"'  

	SAVE_VARIABLE VARIABLE=extruder_temp_setting VALUE={params.S|int}
	save_variable VARIABLE=boot_extruder_temp VALUE={params.S|int}
	
	say_wait S="Extruder Temp set to {params.S|int}"

	M104.1 {rawparams}

	_proc_end function=M104 

#--------------------------------------------------------------------

[gcode_macro M106]
description:  capture and set PCF Setting
rename_existing: M106.1
gcode:

	_proc_start function=M106 func_params='"{rawparams|string}"'  

	SAVE_VARIABLE VARIABLE=pcf_setting VALUE={params.S|int}	# provisional
	save_variable VARIABLE=boot_pcf VALUE={params.S|int}	# provisional
	
	say_wait S="PCF set to {((params.S|int/255)*100)|int} percent"

	M106.1 {rawparams}

	_proc_end function=M106 

#--------------------------------------------------------------------

[gcode_macro M109]
description:  capture and set target HE temp, waiting for temp attainment
rename_existing: M109.1
gcode:

	_proc_start function=M109 func_params='"{rawparams|string}"'   

	SAVE_VARIABLE VARIABLE=extruder_temp_setting VALUE={params.S|int}
	save_variable VARIABLE=boot_extruder_temp VALUE={params.S|int}
	M109.1 {rawparams}
	
	say_wait S="Extruder Temp Hold Until {params.S|int}"

	_proc_end function=M109 

#--------------------------------------------------------------------

[gcode_macro M140]
description:  capture and set target heater_bed temp, non-blocking
rename_existing: M140.1
gcode:

	_proc_start function=M140 func_params='"{rawparams|string}"'  

	SAVE_VARIABLE VARIABLE=heater_bed_temp_setting VALUE={params.S|int}
	save_variable VARIABLE=boot_heater_bed_temp VALUE={params.S|int}

	say_wait S="Bed Temp set to {params.S|int}"

	M140.1 {rawparams}

	_proc_end function=M140 


#--------------------------------------------------------------------

[gcode_macro M190]
description:  capture and set target heater_bed temp, waiting for temp attainment
rename_existing: M190.1
gcode:

	_proc_start function=M190 func_params='"{rawparams|string}"'  

	SAVE_VARIABLE VARIABLE=heater_bed_temp_setting VALUE={params.S|int}
	save_variable VARIABLE=boot_heater_bed_temp VALUE={params.S|int}

	say_wait S="Bed Temp Hold Until {params.S|int}"

	M190.1 {rawparams} 

	_proc_end function=M190 

#--------------------------------------------------------------------

[gcode_macro M191.1]
description:  capture and set target chamber temp, waiting for temp attainment
variable_min_bed_tmp:		60
variable_min_he_tmp:		180
variable_min_chamb_tmp:		40
variable_max_chamb_tmp:		60
# param S = chamber heat temp setting
gcode:

	_proc_start function=M191.1 func_params='"{rawparams|string}"'  

	{% set svv = printer.save_variables.variables %}				# set context for save_variables object
	{% set th = printer.toolhead %}									# set eazy accesss context for printer.toolhead object

	
	{% set S = params.S | default(0) | float %}

	# this is a fully blocking proc.  As such, we need to ensure that 
	# the relevant heaters are on - namely bed and extruder
	# and that the chamber temp setting is w/in reasonable bounds
	
#	M118 M191.1 S 	min:{min_chamb_tmp}		set:{S}		max:{max_chamb_tmp}
#	M118 Bed: min:{min_bed_tmp} 	set:{svv.heater_bed_temp_setting}	act:{printer.heater_bed.temperature}
#	M118 Ext: min:{min_he_tmp} 		set:{svv.extruder_temp_setting}		act:{printer.extruder.temperature}	

	{% if	S <= max_chamb_tmp							and
			S >= min_chamb_tmp							and
			svv.extruder_temp_setting >= min_he_tmp		and
			svv.heater_bed_temp_setting >= min_bed_tmp 
			%}
			
		SAVE_VARIABLE VARIABLE=chamber_temp_setting VALUE={params.S|int}
		M118 Waiting for Chamber to heat to {S}°C
		say_wait S="Chamber Temp Hold Until {S|int}"
		TEMPERATURE_WAIT SENSOR="temperature_fan Chamber" MINIMUM={S}
		M118 Chamber heated to {printer['temperature_fan Chamber'].temperature}°C.
		say_wait S="Chamber Temp Attained"

	{% else %}

		M118 Chamber Temp Params out of bounds - continuing...
		say_wait S="ATTENTION! Chamber Temp Bypass!"

	{% endif %}

	_proc_end function=M191.1 

#--------------------------------------------------------------------

[gcode_macro SET_HEATER_TEMPERATURE]
description:  capture and set target bed temp, waiting for temp attainment
rename_existing: _SET_HEATER_TEMPERATURE_STOCK
gcode:

	_proc_start function=SET_HEATER_TEMPERATURE func_params='"{rawparams|string}"'  

	SAVE_VARIABLE VARIABLE={params.HEATER|string|lower}_temp_setting VALUE={params.TARGET|int}
	save_variable VARIABLE=boot_{params.HEATER|string|lower}_temp VALUE={params.TARGET|int}
	_SET_HEATER_TEMPERATURE_STOCK {rawparams} 
	say_wait S="{params.HEATER|replace("heater_bed", "bed temp")|string|lower} set to {params.TARGET|int}"

	_proc_end function=SET_HEATER_TEMPERATURE 
